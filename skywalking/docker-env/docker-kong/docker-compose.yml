version: '2.2'
services:
  kong-database:
    image: postgres:9.6
    container_name: kong-database
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
    # volumes:
    #   - ./pgSql/data:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U kong && psql -d kong -U kong -c \"SELECT 1=1\""
      interval: 10s
      timeout: 5s
      retries: 5
    networks: 
      - kong-net

  kong-migration:
    image: kong:latest
    container_name: kong-migration
    depends_on:
      kong-database:
        condition: service_healthy
    links:
      - kong-database
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
    command: sh -c "kong migrations up && touch migrations_run && sleep 30"
    healthcheck:
      test: "if [[ -f migrations_run ]] ; then exit 0; else exit 1; fi"
      interval: 10s
      timeout: 5s
      retries: 5
    networks: 
      - kong-net

  kong:
    image: kong:latest
    container_name: kong
    ports:
      - 8000:8000
      - 8001:8001
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - POSTGRES_DB=kong
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
    links:
      - kong-database
    depends_on:
      kong-migration:
        condition: service_healthy
    healthcheck:
      test: "kong health"
      interval: 10s
      timeout: 5s
      retries: 5
    networks: 
      - kong-net
  
  kong-dashboard:
    image: pgbi/kong-dashboard:latest
    container_name: kong-dashboard
    ports:
      - 8080:8080
    depends_on:
      kong:
        condition: service_healthy
    entrypoint: sh -c "node ./bin/kong-dashboard start --kong-url http://kong:8001 --basic-auth alice=1234556"
    # entrypoint: ./docker/entrypoint_dev.sh
    networks: 
      - kong-net

networks: 
  kong-net:
